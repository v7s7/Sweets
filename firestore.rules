rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ==================== HELPER FUNCTIONS ====================
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(merchantId, branchId) {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/merchants/$(merchantId)/branches/$(branchId)/roles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/merchants/$(merchantId)/branches/$(branchId)/roles/$(request.auth.uid)).data.role == 'owner';
    }
    
    function isStaff(merchantId, branchId) {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/merchants/$(merchantId)/branches/$(branchId)/roles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/merchants/$(merchantId)/branches/$(branchId)/roles/$(request.auth.uid)).data.role in ['owner', 'staff'];
    }
    
    // ==================== GLOBAL COLLECTIONS ====================
    
    // Slugs: Public read, no direct writes (only via Cloud Functions or manual admin)
    match /slugs/{slug} {
      allow read: if true;
      allow create, update: if isSignedIn();  // Allow for branding_admin_page.dart
      allow delete: if false;  // Prevent accidental deletion
    }
    
    // ==================== MERCHANT HIERARCHY ====================
    
    match /merchants/{merchantId} {
      // Merchant doc itself
      allow read: if true;
      allow write: if isOwner(merchantId, 'any');  // At least one branch owner
      
      match /branches/{branchId} {
        // Branch doc
        allow read: if true;
        allow write: if isStaff(merchantId, branchId);
        
        // -------------------- MENU ITEMS --------------------
        match /menuItems/{itemId} {
          // PUBLIC READ: Anyone can see active items
          allow read: if resource == null || resource.data.isActive == true;
          
          // STAFF WRITE: Only staff can create/update/delete
          allow create: if isStaff(merchantId, branchId) &&
            request.resource.data.merchantId == merchantId &&
            request.resource.data.branchId == branchId &&
            request.resource.data.isActive is bool &&
            request.resource.data.price is number &&
            request.resource.data.price >= 0 &&
            request.resource.data.name is string &&
            request.resource.data.name.size() > 0;
          
          allow update: if isStaff(merchantId, branchId);
          allow delete: if isStaff(merchantId, branchId);
        }
        
        // -------------------- ORDERS --------------------
        match /orders/{orderId} {
          // CREATE: Any signed-in user can place order
          allow create: if isSignedIn() &&
            request.resource.data.userId == request.auth.uid &&
            request.resource.data.status == 'pending' &&
            request.resource.data.merchantId == merchantId &&
            request.resource.data.branchId == branchId &&
            request.resource.data.items is list &&
            request.resource.data.items.size() > 0 &&
            request.resource.data.items.size() <= 50 &&
            request.resource.data.subtotal is number &&
            request.resource.data.subtotal >= 0 &&
            request.resource.data.subtotal <= 1000;
          
          // READ: Own orders or staff
          allow read: if isSignedIn() &&
            (resource.data.userId == request.auth.uid ||
             isStaff(merchantId, branchId));
          
          // UPDATE: Only staff can update (change status)
          allow update: if isStaff(merchantId, branchId) &&
            request.resource.data.diff(resource.data)
              .affectedKeys()
              .hasOnly(['status', 'updatedAt']);
          
          // No deletes
          allow delete: if false;
        }
        
        // -------------------- ROLES --------------------
        match /roles/{userId} {
          // Users can read their own role
          allow read: if isSignedIn() && request.auth.uid == userId;
          
          // Only owner can manage roles
          allow write: if isOwner(merchantId, branchId);
        }
        
        // -------------------- CONFIG (BRANDING) --------------------
        match /config/{docId} {
          // PUBLIC READ: Anyone can see branding
          allow read: if true;
          
          // STAFF WRITE: Only staff can update branding
          allow write: if isStaff(merchantId, branchId);
        }
      }
    }
    
    // ==================== DENY ALL OTHERS ====================
    match /{document=**} {
      allow read, write: if false;
    }
  }
}